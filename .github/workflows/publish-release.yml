name: Publish Release

on:
  release:
    types: [published]
jobs:
  Get-Properties:
    runs-on: ubuntu-latest
    outputs:
      release-type: ${{ steps.type.outputs.release-type }}
      minecraft-version: ${{ steps.properties.outputs.minecraft_version }}
      curse-versions: ${{ steps.properties.outputs.release-curse-versions }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v3
      - name: Determine release type
        id: type
        run: |
          if ${{ github.event.release.prerelease }}; then
            echo "release-type=beta" >> $GITHUB_OUTPUT
          else
            echo "release-type=release" >> $GITHUB_OUTPUT
          fi
     
  Build-And-Publish:
    runs-on: ubuntu-latest
    needs: [Get-Properties]
    strategy:
      matrix:
        branch: [Release]
        exclude:
          - branch: ${{ needs.Get-Properties.outputs.matrix-exclude-branch }}
    steps:
      - name: Checkout the sources
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.getbranchinfo.outputs.branchname }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Find correct JAR
        id: findjar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "jarname=$output" >> $GITHUB_OUTPUT
      - name: Save build artifacts in the action
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts for ${{ matrix.branch }}
          path: build/libs

      - name: Upload to the Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/libs/${{ steps.findjar.outputs.jarname }}
          asset_name: ${{ steps.findjar.outputs.jarname }}
          asset_content_type: application/java-archive
